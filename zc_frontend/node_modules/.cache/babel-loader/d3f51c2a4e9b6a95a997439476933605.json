{"ast":null,"code":"import _slicedToArray from\"/home/samuel/Documents/Zuri project/zc_main/zc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useState,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var URLContext=/*#__PURE__*/createContext(null);export var UrlProvider=function UrlProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),url=_useState2[0],setUrl=_useState2[1];var modalRef=useRef();// setting up my states for the profile topbar modal\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showModal=_useState4[0],setShowModal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showStatus=_useState6[0],setShowStatus=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),chosenEmoji=_useState8[0],setChosenEmoji=_useState8[1];// The function that opens the topbar profile modal\nvar openModal=function openModal(){setShowModal(!showModal);};// The function that closes the topbar profile modal\nvar closeModal=function closeModal(e){if(modalRef.current===e.target){setShowModal(false);console.log(\"close\");}};// The function that opens the topbar profile status modal \nvar openStatus=function openStatus(){setShowStatus(!showStatus);};// The function that closes the topbar profile status modal\nvar closeStatus=function closeStatus(e){if(modalRef.current===e.target){setShowStatus(false);}};// The function for the emoji onclick events\nvar onEmojiClick=function onEmojiClick(event,emojiObject){setChosenEmoji(emojiObject);};// Passes all functions and states to the state object\nvar state={url:[url,setUrl],openModal:openModal,closeModal:closeModal,openStatus:openStatus,closeStatus:closeStatus,modalRef:modalRef,show:[showModal,setShowModal],status:[showStatus,setShowStatus],emoji:[chosenEmoji,setChosenEmoji],onEmojiClick:onEmojiClick};return/*#__PURE__*/_jsx(URLContext.Provider,{value:state,children:children});};","map":{"version":3,"sources":["/home/samuel/Documents/Zuri project/zc_main/zc_frontend/src/contexts/Url.js"],"names":["createContext","useState","useRef","URLContext","UrlProvider","children","url","setUrl","modalRef","showModal","setShowModal","showStatus","setShowStatus","chosenEmoji","setChosenEmoji","openModal","closeModal","e","current","target","console","log","openStatus","closeStatus","onEmojiClick","event","emojiObject","state","show","status","emoji"],"mappings":"8KAAA,OAASA,aAAT,CAAwBC,QAAxB,CAAkCC,MAAlC,KAAgD,OAAhD,C,2CAEA,MAAO,IAAMC,CAAAA,UAAU,cAAGH,aAAa,CAAC,IAAD,CAAhC,CACP,MAAO,IAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACrBJ,QAAQ,CAAC,IAAD,CADa,wCACpCK,GADoC,eAC/BC,MAD+B,eAE3C,GAAMC,CAAAA,QAAQ,CAAGN,MAAM,EAAvB,CAEA;AAJ2C,eAKTD,QAAQ,CAAC,KAAD,CALC,yCAKpCQ,SALoC,eAKzBC,YALyB,8BAMPT,QAAQ,CAAC,KAAD,CAND,yCAMpCU,UANoC,eAMxBC,aANwB,8BAOLX,QAAQ,CAAC,IAAD,CAPH,yCAOpCY,WAPoC,eAOvBC,cAPuB,eAW3C;AACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBL,YAAY,CAAC,CAACD,SAAF,CAAZ,CACD,CAFD,CAIA;AACA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,CAAC,CAAI,CACtB,GAAIT,QAAQ,CAACU,OAAT,GAAqBD,CAAC,CAACE,MAA3B,CAAmC,CACjCT,YAAY,CAAC,KAAD,CAAZ,CACAU,OAAO,CAACC,GAAR,CAAY,OAAZ,EACD,CACF,CALD,CAQA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBV,aAAa,CAAC,CAACD,UAAF,CAAb,CACD,CAFD,CAIA;AACA,GAAMY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAN,CAAC,CAAI,CACvB,GAAIT,QAAQ,CAACU,OAAT,GAAqBD,CAAC,CAACE,MAA3B,CAAmC,CACjCP,aAAa,CAAC,KAAD,CAAb,CACD,CACF,CAJD,CAOA;AACA,GAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,WAAR,CAAwB,CAC3CZ,cAAc,CAACY,WAAD,CAAd,CACH,CAFC,CAMF;AACE,GAAMC,CAAAA,KAAK,CAAG,CACZrB,GAAG,CAAG,CAACA,GAAD,CAAMC,MAAN,CADM,CAEZQ,SAAS,CAATA,SAFY,CAGZC,UAAU,CAAVA,UAHY,CAIZM,UAAU,CAAVA,UAJY,CAKZC,WAAW,CAAXA,WALY,CAMZf,QAAQ,CAARA,QANY,CAOZoB,IAAI,CAAG,CAACnB,SAAD,CAAYC,YAAZ,CAPK,CAQZmB,MAAM,CAAG,CAAClB,UAAD,CAAaC,aAAb,CARG,CASZkB,KAAK,CAAE,CAACjB,WAAD,CAAcC,cAAd,CATK,CAUZU,YAAY,CAAZA,YAVY,CAAd,CAcA,mBACE,KAAC,UAAD,CAAY,QAAZ,EAAqB,KAAK,CAAEG,KAA5B,UACGtB,QADH,EADF,CAKD,CAjEM","sourcesContent":["import { createContext, useState, useRef } from 'react'\n\nexport const URLContext = createContext(null)\nexport const UrlProvider = ({ children }) => {\n  const [url, setUrl] = useState(null)\n  const modalRef = useRef();\n\n  // setting up my states for the profile topbar modal\n  const [showModal, setShowModal] = useState(false)\n  const [showStatus, setShowStatus] = useState(false)\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n\n\n\n  // The function that opens the topbar profile modal\n  const openModal = () => {\n    setShowModal(!showModal)\n  }\n\n  // The function that closes the topbar profile modal\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n      console.log(\"close\")\n    }\n  };\n\n\n  // The function that opens the topbar profile status modal \n  const openStatus = () => {\n    setShowStatus(!showStatus)\n  }\n\n  // The function that closes the topbar profile status modal\n  const closeStatus = e => {\n    if (modalRef.current === e.target) {\n      setShowStatus(false);\n    }\n  };\n\n\n  // The function for the emoji onclick events\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n}\n\n\n\n// Passes all functions and states to the state object\n  const state = {\n    url : [url, setUrl],\n    openModal,\n    closeModal,\n    openStatus,\n    closeStatus,\n    modalRef,\n    show : [showModal, setShowModal],\n    status : [showStatus, setShowStatus],\n    emoji: [chosenEmoji, setChosenEmoji],\n    onEmojiClick,\n  }\n\n\n  return (\n    <URLContext.Provider value={state}>\n      {children}\n    </URLContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}