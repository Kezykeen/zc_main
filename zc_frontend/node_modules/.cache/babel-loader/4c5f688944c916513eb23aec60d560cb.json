{"ast":null,"code":"import styles from\"../../styles/Signup.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){/**\n   * @param password {string} - password to test\n   * @param okay_length {number} - minimum length of password (defaults to 0)\n   *\n   * @return {{valid: boolean, msg: string, short: `length` | `special` | `number` | `lower` | `upper` | `okay`}}\n   */var passwordCheck=function passwordCheck(password){var okay_length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;/** Check if password meets required length */if(password.length<okay_length)return{valid:false,msg:\"password is too short\",short:\"length\"};/** Special Character regex */var special_characters=/[ `!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;/** Check if password contains a special character */if(!special_characters.test(password))return{valid:false,msg:\"password must contain a special character\",short:\"special\"};/** Check if password contains a special character */var number_regex=/[0-9]/;if(!number_regex.test(password))return{valid:false,msg:\"password must contain a number\",short:\"number\"};/** Check if password contains a lowercase character */var lowercase_regex=/[a-z]/;if(!lowercase_regex.test(password))return{valid:false,msg:\"password must contain a lowercase letter\",short:\"lower\"};/** Check if password contains an uppercase character */var uppercase_regex=/[A-Z]/;if(!uppercase_regex.test(password))return{valid:false,msg:\"password must contain an uppercase letter\",short:\"upper\"};return{valid:true,msg:\"password is okay\",short:\"okay\"};};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:\"This is signup page\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.signup_btn,children:\"Sign up\"})]});};export default Login;","map":{"version":3,"sources":["/home/samuel/Documents/Zuri project/zc_main/zc_frontend/src/pages/signup/index.js"],"names":["styles","Login","passwordCheck","password","okay_length","length","valid","msg","short","special_characters","test","number_regex","lowercase_regex","uppercase_regex","signup_btn"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,gCAAnB,C,6IAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB;AACF;AACA;AACA;AACA;AACA,KACE,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAA+B,IAApBC,CAAAA,WAAoB,2DAAN,CAAM,CACnD,8CACA,GAAID,QAAQ,CAACE,MAAT,CAAkBD,WAAtB,CACE,MAAO,CAAEE,KAAK,CAAE,KAAT,CAAgBC,GAAG,wBAAnB,CAA8CC,KAAK,SAAnD,CAAP,CAEF,8BACA,GAAMC,CAAAA,kBAAkB,CAAG,wCAA3B,CACA,qDACA,GAAI,CAACA,kBAAkB,CAACC,IAAnB,CAAwBP,QAAxB,CAAL,CACE,MAAO,CACLG,KAAK,CAAE,KADF,CAELC,GAAG,4CAFE,CAGLC,KAAK,UAHA,CAAP,CAMF,qDACA,GAAMG,CAAAA,YAAY,CAAG,OAArB,CACA,GAAI,CAACA,YAAY,CAACD,IAAb,CAAkBP,QAAlB,CAAL,CACE,MAAO,CACLG,KAAK,CAAE,KADF,CAELC,GAAG,iCAFE,CAGLC,KAAK,SAHA,CAAP,CAMF,uDACA,GAAMI,CAAAA,eAAe,CAAG,OAAxB,CACA,GAAI,CAACA,eAAe,CAACF,IAAhB,CAAqBP,QAArB,CAAL,CACE,MAAO,CACLG,KAAK,CAAE,KADF,CAELC,GAAG,2CAFE,CAGLC,KAAK,QAHA,CAAP,CAMF,wDACA,GAAMK,CAAAA,eAAe,CAAG,OAAxB,CACA,GAAI,CAACA,eAAe,CAACH,IAAhB,CAAqBP,QAArB,CAAL,CACE,MAAO,CACLG,KAAK,CAAE,KADF,CAELC,GAAG,4CAFE,CAGLC,KAAK,QAHA,CAAP,CAMF,MAAO,CAAEF,KAAK,CAAE,IAAT,CAAeC,GAAG,mBAAlB,CAAwCC,KAAK,OAA7C,CAAP,CACD,CA3CD,CA6CA,mBACE,wCACE,4CADF,cAEE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAER,MAAM,CAACc,UAAxC,qBAFF,GADF,CAQD,CA5DD,CA8DA,cAAeb,CAAAA,KAAf","sourcesContent":["import styles from \"../../styles/Signup.module.css\";\n\nconst Login = () => {\n  /**\n   * @param password {string} - password to test\n   * @param okay_length {number} - minimum length of password (defaults to 0)\n   *\n   * @return {{valid: boolean, msg: string, short: `length` | `special` | `number` | `lower` | `upper` | `okay`}}\n   */\n  const passwordCheck = (password, okay_length = 0) => {\n    /** Check if password meets required length */\n    if (password.length < okay_length)\n      return { valid: false, msg: `password is too short`, short: `length` };\n\n    /** Special Character regex */\n    const special_characters = /[ `!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\n    /** Check if password contains a special character */\n    if (!special_characters.test(password))\n      return {\n        valid: false,\n        msg: `password must contain a special character`,\n        short: `special`,\n      };\n\n    /** Check if password contains a special character */\n    const number_regex = /[0-9]/;\n    if (!number_regex.test(password))\n      return {\n        valid: false,\n        msg: `password must contain a number`,\n        short: `number`,\n      };\n\n    /** Check if password contains a lowercase character */\n    const lowercase_regex = /[a-z]/;\n    if (!lowercase_regex.test(password))\n      return {\n        valid: false,\n        msg: `password must contain a lowercase letter`,\n        short: `lower`,\n      };\n\n    /** Check if password contains an uppercase character */\n    const uppercase_regex = /[A-Z]/;\n    if (!uppercase_regex.test(password))\n      return {\n        valid: false,\n        msg: `password must contain an uppercase letter`,\n        short: `upper`,\n      };\n\n    return { valid: true, msg: `password is okay`, short: `okay` };\n  };\n\n  return (\n    <>\n      <div>This is signup page</div>\n      <button type=\"submit\" className={styles.signup_btn}>\n        Sign up\n      </button>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}