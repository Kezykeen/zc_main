{"ast":null,"code":"import{useContext,Fragment}from'react';import useSWR from'swr';import{URLContext}from'../contexts/Url';import styles from'../styles/Sidebar.module.css';import Dropdown from'./Dropdown';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var fetcher=function fetcher(url){return fetch(url).then(function(res){return res.json();});};export var Sidebar=function Sidebar(){var _useSWR=useSWR('/api/plugin/channels',fetcher),channelsData=_useSWR.data;var _useSWR2=useSWR('/api/plugin/messages',fetcher),messagesData=_useSWR2.data;var _useSWR3=useSWR('/api/plugin/list',fetcher),plugins=_useSWR3.data;var _useContext=useContext(URLContext),setUrl=_useContext.setUrl;return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.zuriLogo,children:[/*#__PURE__*/_jsx(\"img\",{src:\"/zurichatlogo.svg\",alt:\"Zuri Chat logo\"}),/*#__PURE__*/_jsx(\"p\",{children:\"ZURI\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.orgInfo,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.orgName,children:[/*#__PURE__*/_jsx(\"p\",{children:\"HNGi8\"}),/*#__PURE__*/_jsx(\"img\",{src:\"/shapekeyboardarrowdown.svg\",alt:\"Organisation settings button\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.newMessage,children:/*#__PURE__*/_jsx(\"img\",{src:\"/newmessage.svg\",alt:\"New message icon\"})})]}),/*#__PURE__*/_jsx(Dropdown,{title:\"Channels\",children:channelsData&&channelsData.channels.map(function(channel,index){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"#\"}),channel.name]},index);})}),plugins&&Object.keys(plugins).map(function(key){return/*#__PURE__*/_jsx(Dropdown,{title:plugins[key].name,showAddButton:false,onTitleClick:function onTitleClick(){return setUrl(key);}},key);}),/*#__PURE__*/_jsx(Dropdown,{title:\"messages\",children:messagesData&&messagesData.messages.map(function(message,index){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"img\",{src:message.avatar,alt:\"avatar\"})}),message.name]},index);})})]});};","map":{"version":3,"sources":["/home/samuel/Documents/Zuri project/zc_main/zc_frontend/src/components/Sidebar.js"],"names":["useContext","Fragment","useSWR","URLContext","styles","Dropdown","fetcher","url","fetch","then","res","json","Sidebar","channelsData","data","messagesData","plugins","setUrl","container","zuriLogo","orgInfo","orgName","newMessage","channels","map","channel","index","name","Object","keys","key","messages","message","avatar"],"mappings":"AAAA,OAASA,UAAT,CAAqBC,QAArB,KAAqC,OAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,KAAnB,CACA,OAASC,UAAT,KAA2B,iBAA3B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,8BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,QAASC,CAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAAhB,CAAT,EAAhB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,aACIV,MAAM,CAAC,sBAAD,CAAyBI,OAAzB,CADV,CACbO,YADa,SACnBC,IADmB,cAEIZ,MAAM,CAAC,sBAAD,CAAyBI,OAAzB,CAFV,CAEbS,YAFa,UAEnBD,IAFmB,cAGDZ,MAAM,CAAC,kBAAD,CAAqBI,OAArB,CAHL,CAGbU,OAHa,UAGnBF,IAHmB,iBAKRd,UAAU,CAACG,UAAD,CALF,CAKnBc,MALmB,aAKnBA,MALmB,CAO3B,mBACE,aAAK,SAAS,CAAEb,MAAM,CAACc,SAAvB,wBACE,aAAK,SAAS,CAAEd,MAAM,CAACe,QAAvB,wBACE,YAAK,GAAG,CAAC,mBAAT,CAA6B,GAAG,CAAC,gBAAjC,EADF,cAEE,2BAFF,GADF,cAKE,aAAK,SAAS,CAAEf,MAAM,CAACgB,OAAvB,wBACE,aAAK,SAAS,CAAEhB,MAAM,CAACiB,OAAvB,wBACE,4BADF,cAEE,YACE,GAAG,CAAC,6BADN,CAEE,GAAG,CAAC,8BAFN,EAFF,GADF,cAQE,YAAK,SAAS,CAAEjB,MAAM,CAACkB,UAAvB,uBACE,YAAK,GAAG,CAAC,iBAAT,CAA2B,GAAG,CAAC,kBAA/B,EADF,EARF,GALF,cAiBE,KAAC,QAAD,EAAU,KAAK,CAAC,UAAhB,UACGT,YAAY,EACXA,YAAY,CAACU,QAAb,CAAsBC,GAAtB,CAA0B,SAACC,OAAD,CAAUC,KAAV,qBACxB,MAAC,QAAD,yBACE,2BADF,CAEGD,OAAO,CAACE,IAFX,GAAeD,KAAf,CADwB,EAA1B,CAFJ,EAjBF,CA0BGV,OAAO,EACNY,MAAM,CAACC,IAAP,CAAYb,OAAZ,EAAqBQ,GAArB,CAAyB,SAACM,GAAD,qBACvB,KAAC,QAAD,EACE,KAAK,CAAEd,OAAO,CAACc,GAAD,CAAP,CAAaH,IADtB,CAGE,aAAa,CAAE,KAHjB,CAIE,YAAY,CAAE,8BAAMV,CAAAA,MAAM,CAACa,GAAD,CAAZ,EAJhB,EAEOA,GAFP,CADuB,EAAzB,CA3BJ,cAmCE,KAAC,QAAD,EAAU,KAAK,CAAC,UAAhB,UACGf,YAAY,EACXA,YAAY,CAACgB,QAAb,CAAsBP,GAAtB,CAA0B,SAACQ,OAAD,CAAUN,KAAV,qBACxB,MAAC,QAAD,yBACE,mCACE,YAAK,GAAG,CAAEM,OAAO,CAACC,MAAlB,CAA0B,GAAG,CAAC,QAA9B,EADF,EADF,CAIGD,OAAO,CAACL,IAJX,GAAeD,KAAf,CADwB,EAA1B,CAFJ,EAnCF,GADF,CAiDD,CAxDM","sourcesContent":["import { useContext, Fragment } from 'react'\nimport useSWR from 'swr'\nimport { URLContext } from '../contexts/Url'\n\nimport styles from '../styles/Sidebar.module.css'\nimport Dropdown from './Dropdown'\n\nconst fetcher = (url) => fetch(url).then((res) => res.json())\n\nexport const Sidebar = () => {\n  const { data: channelsData } = useSWR('/api/plugin/channels', fetcher)\n  const { data: messagesData } = useSWR('/api/plugin/messages', fetcher)\n  const { data: plugins } = useSWR('/api/plugin/list', fetcher)\n\n  const { setUrl } = useContext(URLContext)\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.zuriLogo}>\n        <img src=\"/zurichatlogo.svg\" alt=\"Zuri Chat logo\" />\n        <p>ZURI</p>\n      </div>\n      <div className={styles.orgInfo}>\n        <div className={styles.orgName}>\n          <p>HNGi8</p>\n          <img\n            src=\"/shapekeyboardarrowdown.svg\"\n            alt=\"Organisation settings button\"\n          />\n        </div>\n        <div className={styles.newMessage}>\n          <img src=\"/newmessage.svg\" alt=\"New message icon\" />\n        </div>\n      </div>\n      <Dropdown title=\"Channels\">\n        {channelsData &&\n          channelsData.channels.map((channel, index) => (\n            <Fragment key={index}>\n              <span>#</span>\n              {channel.name}\n            </Fragment>\n          ))}\n      </Dropdown>\n      {plugins &&\n        Object.keys(plugins).map((key) => (\n          <Dropdown\n            title={plugins[key].name}\n            key={key}\n            showAddButton={false}\n            onTitleClick={() => setUrl(key)}\n          ></Dropdown>\n        ))}\n      <Dropdown title=\"messages\">\n        {messagesData &&\n          messagesData.messages.map((message, index) => (\n            <Fragment key={index}>\n              <span>\n                <img src={message.avatar} alt=\"avatar\" />\n              </span>\n              {message.name}\n            </Fragment>\n          ))}\n      </Dropdown>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}