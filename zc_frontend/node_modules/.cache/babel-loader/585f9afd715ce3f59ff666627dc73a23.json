{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documents/Zuri project/zc_main/zc_frontend/src/pages/signup/index.js\";\nimport styles from \"../../styles/Signup.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  /**\n   * @param password {string} - password to test\n   * @param okay_length {number} - minimum length of password (defaults to 0)\n   *\n   * @return {{valid: boolean, msg: string, short: `length` | `special` | `number` | `lower` | `upper` | `okay`}}\n   */\n  const passwordCheck = (password, okay_length = 0) => {\n    /** Check if password meets required length */\n    if (password.length < okay_length) return {\n      valid: false,\n      msg: `password is too short`,\n      short: `length`\n    };\n    /** Special Character regex */\n\n    const special_characters = /[ `!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\n    /** Check if password contains a special character */\n\n    if (!special_characters.test(password)) return {\n      valid: false,\n      msg: `password must contain a special character`,\n      short: `special`\n    };\n    /** Check if password contains a special character */\n\n    const number_regex = /[0-9]/;\n    if (!number_regex.test(password)) return {\n      valid: false,\n      msg: `password must contain a number`,\n      short: `number`\n    };\n    /** Check if password contains a lowercase character */\n\n    const lowercase_regex = /[a-z]/;\n    if (!lowercase_regex.test(password)) return {\n      valid: false,\n      msg: `password must contain a lowercase letter`,\n      short: `lower`\n    };\n    /** Check if password contains an uppercase character */\n\n    const uppercase_regex = /[A-Z]/;\n    if (!uppercase_regex.test(password)) return {\n      valid: false,\n      msg: `password must contain an uppercase letter`,\n      short: `upper`\n    };\n    return {\n      valid: true,\n      msg: `password is okay`,\n      short: `okay`\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is signup page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles.signup_btn,\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/samuel/Documents/Zuri project/zc_main/zc_frontend/src/pages/signup/index.js"],"names":["styles","Login","passwordCheck","password","okay_length","length","valid","msg","short","special_characters","test","number_regex","lowercase_regex","uppercase_regex","signup_btn"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,gCAAnB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACF;AACA;AACA;AACA;AACA;AACE,QAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,WAAW,GAAG,CAAzB,KAA+B;AACnD;AACA,QAAID,QAAQ,CAACE,MAAT,GAAkBD,WAAtB,EACE,OAAO;AAAEE,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,GAAG,EAAG,uBAAtB;AAA8CC,MAAAA,KAAK,EAAG;AAAtD,KAAP;AAEF;;AACA,UAAMC,kBAAkB,GAAG,wCAA3B;AACA;;AACA,QAAI,CAACA,kBAAkB,CAACC,IAAnB,CAAwBP,QAAxB,CAAL,EACE,OAAO;AACLG,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,GAAG,EAAG,2CAFD;AAGLC,MAAAA,KAAK,EAAG;AAHH,KAAP;AAMF;;AACA,UAAMG,YAAY,GAAG,OAArB;AACA,QAAI,CAACA,YAAY,CAACD,IAAb,CAAkBP,QAAlB,CAAL,EACE,OAAO;AACLG,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,GAAG,EAAG,gCAFD;AAGLC,MAAAA,KAAK,EAAG;AAHH,KAAP;AAMF;;AACA,UAAMI,eAAe,GAAG,OAAxB;AACA,QAAI,CAACA,eAAe,CAACF,IAAhB,CAAqBP,QAArB,CAAL,EACE,OAAO;AACLG,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,GAAG,EAAG,0CAFD;AAGLC,MAAAA,KAAK,EAAG;AAHH,KAAP;AAMF;;AACA,UAAMK,eAAe,GAAG,OAAxB;AACA,QAAI,CAACA,eAAe,CAACH,IAAhB,CAAqBP,QAArB,CAAL,EACE,OAAO;AACLG,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,GAAG,EAAG,2CAFD;AAGLC,MAAAA,KAAK,EAAG;AAHH,KAAP;AAMF,WAAO;AAAEF,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,GAAG,EAAG,kBAArB;AAAwCC,MAAAA,KAAK,EAAG;AAAhD,KAAP;AACD,GA3CD;;AA6CA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAER,MAAM,CAACc,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD,CA5DD;;KAAMb,K;AA8DN,eAAeA,KAAf","sourcesContent":["import styles from \"../../styles/Signup.module.css\";\n\nconst Login = () => {\n  /**\n   * @param password {string} - password to test\n   * @param okay_length {number} - minimum length of password (defaults to 0)\n   *\n   * @return {{valid: boolean, msg: string, short: `length` | `special` | `number` | `lower` | `upper` | `okay`}}\n   */\n  const passwordCheck = (password, okay_length = 0) => {\n    /** Check if password meets required length */\n    if (password.length < okay_length)\n      return { valid: false, msg: `password is too short`, short: `length` };\n\n    /** Special Character regex */\n    const special_characters = /[ `!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\n    /** Check if password contains a special character */\n    if (!special_characters.test(password))\n      return {\n        valid: false,\n        msg: `password must contain a special character`,\n        short: `special`,\n      };\n\n    /** Check if password contains a special character */\n    const number_regex = /[0-9]/;\n    if (!number_regex.test(password))\n      return {\n        valid: false,\n        msg: `password must contain a number`,\n        short: `number`,\n      };\n\n    /** Check if password contains a lowercase character */\n    const lowercase_regex = /[a-z]/;\n    if (!lowercase_regex.test(password))\n      return {\n        valid: false,\n        msg: `password must contain a lowercase letter`,\n        short: `lower`,\n      };\n\n    /** Check if password contains an uppercase character */\n    const uppercase_regex = /[A-Z]/;\n    if (!uppercase_regex.test(password))\n      return {\n        valid: false,\n        msg: `password must contain an uppercase letter`,\n        short: `upper`,\n      };\n\n    return { valid: true, msg: `password is okay`, short: `okay` };\n  };\n\n  return (\n    <>\n      <div>This is signup page</div>\n      <button type=\"submit\" className={styles.signup_btn}>\n        Sign up\n      </button>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}